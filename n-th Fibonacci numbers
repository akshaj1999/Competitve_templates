 static long N = 10000000L;

  public static long square(long n) {
  if(n==0) 
    return n;
  long test = n-1;
  ArrayList<Long> arr = new ArrayList<>();
  long[] A = new long[]{
    1, 1,
    1, 0
  };
  long[] result = new long[4];
  System.arraycopy(A, 0, result, 0, 4);
  while(test>1){
    if(test%2!=0)
      arr.add(1L);
    else
      arr.add(0L);
    test/=2;
  }
  for(int i=arr.size()-1;i>-1;i--){
    result=multiply(result,result);
    if(arr.get(i)==1)
      result=multiply(result,A);
  }
  return result[0];
}
private static long[] multiply(long[] a, long[] b) {
  long[] result = new long[]{
   ((a[0] * b[0])%N + (a[1] * b[2])%N)%N, ((a[0] * b[1])%N + (a[1] * b[3])%N)%N,
    ((a[2] * b[0])%N+ (a[3] * b[2])%N)%N, ((a[2] * b[1])%N + (a[3] * b[3])%N)%N
  };
  return result;
}
